grafana:
  enabled: true
  fullnameOverride: grafana
  testFramework:
    enabled: false
  grafana.ini:
    auth:
      disable_login_form: true
    auth.anonymous:
      enabled: true
      org_name: Main Org.
      org_role: Admin
    server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana"
      serve_from_sub_path: true
  adminPassword: admin
  plugins: []
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          uid: webstore-metrics
          type: prometheus
          url: http://prometheus:9090
          editable: true
          isDefault: true
          jsonData:
            exemplarTraceIdDestinations:
              - datasourceUid: webstore-traces
                name: trace_id
              - url: http://localhost:8080/jaeger/ui/trace/$${__value.raw}
                name: trace_id
                urlDisplayLabel: View in Jaeger UI
        - name: Jaeger
          uid: webstore-traces
          type: jaeger
          url: http://jaeger-query:16686/jaeger/ui
          editable: true
          isDefault: false
        - name: Loki
          uid: webstore-logs
          type: loki
          url: http://loki:3100
          access: proxy
          editable: true
          isDefault: false
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboardsConfigMaps:
    default: grafana-dashboards
  resources:
    limits:
      memory: 1Gi
    requests:
      memory: 1Gi
  alerting:
    rules.yaml:
      apiVersion: 1
      groups:
        - orgId: 1
          name: kafka
          folder: Demo-Alerts
          interval: 1m
          rules:
            - uid: ceud261tkb6yoc
              title: KafkaConsumerLagHigh
              condition: C
              data:
                - refId: A
                  relativeTimeRange:
                    from: 300
                    to: 0
                  datasourceUid: webstore-metrics
                  model:
                    adhocFilters: []
                    datasource:
                      type: prometheus
                      uid: webstore-metrics
                    editorMode: code
                    expr: kafka_consumer_records_lag
                    instant: true
                    interval: ""
                    intervalMs: 15000
                    legendFormat: '{{`{{topic}}-p{{partition}} ({{client_id}})`}}'
                    maxDataPoints: 43200
                    range: false
                    refId: A
                - refId: C
                  datasourceUid: __expr__
                  model:
                    conditions:
                      - evaluator:
                          params:
                            - 100
                          type: gt
                        operator:
                          type: and
                        query:
                          params:
                            - C
                        reducer:
                          params: []
                          type: last
                        type: query
                    datasource:
                      type: __expr__
                      uid: __expr__
                    expression: A
                    intervalMs: 5000
                    maxDataPoints: 43200
                    refId: C
                    type: threshold
              dashboardUid: kafkaDashboard
              panelId: 23
              noDataState: NoData
              execErrState: Error
              for: 30s
              annotations:
                __dashboardUid__: kafkaDashboard
                __panelId__: "23"
              isPaused: false
              # notification_settings:
              #   receiver: Alert_Webhook
        - orgId: 1
          name: recommendation-service
          folder: Demo-Alerts
          interval: 1m
          rules:
            - uid: aeud5pyhdy22of
              title: HighRecommendationLatency
              condition: C
              data:
                - refId: A
                  relativeTimeRange:
                    from: 300
                    to: 0
                  datasourceUid: webstore-metrics
                  model:
                    adhocFilters: []
                    datasource:
                      type: prometheus
                      uid: webstore-metrics
                    expr: histogram_quantile(0.95, sum(rate(traces_span_metrics_duration_milliseconds_bucket{service_name="recommendation"}[5m])) by (le))
                    instant: true
                    interval: ""
                    intervalMs: 5000
                    legendFormat: p95 Latency
                    maxDataPoints: 43200
                    range: false
                    refId: A
                - refId: C
                  datasourceUid: __expr__
                  model:
                    conditions:
                      - evaluator:
                          params:
                            - 1000
                          type: gt
                        operator:
                          type: and
                        query:
                          params:
                            - C
                        reducer:
                          params: []
                          type: last
                        type: query
                    datasource:
                      type: __expr__
                      uid: __expr__
                    expression: A
                    intervalMs: 1000
                    maxDataPoints: 43200
                    refId: C
                    type: threshold
              dashboardUid: recommendation-service
              panelId: 4
              noDataState: NoData
              execErrState: Error
              for: 30s
              annotations:
                __dashboardUid__: recommendation-service
                __panelId__: "4"
              isPaused: false
              # notification_settings:
              #   receiver: Alert_Webhook
